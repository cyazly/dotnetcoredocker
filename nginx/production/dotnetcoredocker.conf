upstream nuxt {
    server nuxt:3000;
}

upstream api {
    server api:80;
}

server {
    listen 80;
    server_name dotnetcoredocker.com www.dotnetcoredocker.com;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    location / {
        return 301 https://dotnetcoredocker.com$request_uri;
    }
}

server {
    listen 80;
    server_name api.dotnetcoredocker.com;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.dotnetcoredocker.com;
    server_tokens off;
    proxy_ssl_server_name on;

    ssl_certificate /etc/letsencrypt/live/www.dotnetcoredocker.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.dotnetcoredocker.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    location / {
        return 301 https://dotnetcoredocker.com$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name dotnetcoredocker.com;
    server_tokens off;
    proxy_ssl_server_name on;

    ssl_certificate /etc/letsencrypt/live/dotnetcoredocker.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dotnetcoredocker.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass                          http://nuxt;
        proxy_http_version	                1.1;
        proxy_cache_bypass	                $http_upgrade;
        proxy_buffering                     off;

        proxy_set_header Upgrade			$http_upgrade;
        proxy_set_header Connection 		'upgrade';
        proxy_set_header Host				$host;
        proxy_set_header X-Real-IP			$remote_addr;
        proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto	$scheme;
        proxy_set_header X-Forwarded-Host	$host;
        proxy_set_header X-Forwarded-Port	$server_port;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.dotnetcoredocker.com;
    server_tokens off;
    proxy_ssl_server_name on;

    ssl_certificate /etc/letsencrypt/live/api.dotnetcoredocker.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.dotnetcoredocker.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass                          http://api;
        proxy_http_version                  1.1;
        proxy_cache_bypass                  $http_upgrade;
        proxy_buffering                     off;

        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         keep-alive;
        proxy_set_header Host               $host;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
    }
}   